/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    
    implementation 'org.springframework.boot:spring-boot-starter'
    
    implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-batch:2.5.3'
	
	implementation 'org.projectlombok:lombok:1.18.20'
	
	//Reading excel sheet
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
   	
   	//Database Drivier: MySQL Connectivity
   	//implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
   	implementation 'mysql:mysql-connector-java'
	implementation 'mysql:mysql-connector-java:8.0.28'
	runtimeOnly 'mysql:mysql-connector-java'
	
	//javax
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'javax.activation:activation:1.1.1'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    
   	
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
